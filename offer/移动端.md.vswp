vnote_backup_file_826537664 /Users/apple/Documents/vnote_notebooks/es6-babel/offer/移动端.md


### 自适应布局方式
- 响应式布局
- 100%弹性布局
- 等比缩放rem

响应式布局：
`<link rel="stylesheet" type="text/css" href="./css980.css" media="all and (min-width: 980px)"/>`

### 逻辑像素或逻辑分辨率
在CSS规范中，长度单位可以分为两类，绝对(absolute)单位以及相对(relative)单位。px是一个相对单位，相对的是设备像素(device pixel)。

由于不同的物理设备的物理像素的大小是不一样的，所以css认为浏览器应该对css中的像素进行调节，使得浏览器中 1css像素的大小在不同物理设备上看上去大小总是差不多 ，目的是为了保证阅读体验一致。为了达到这一点浏览器可以直接按照设备的物理像素大小进行换算，而css规范中使用 **"参考像素"** 来进行换算。

`devicePixelRatio`

### meta标签
> viewport
- width=device-width
- initial-scale=1.0
- maximum-scale=1.0
- user-scalable=no
> format-detection
- telephone=no
- email
- adress
> apple-mobile-web-app-capable
- yes

### 移动端click会有300毫秒延迟
因为移动端浏览器会有一些默认的行为，比如双击缩放、双击滚动。这些行为尤其是双击缩放，主要是为桌面网站在移动端的浏览体验设计的。而在用户对页面进行操作的时候，移动端浏览器会优先判断用户是否要触发默认的行为。

### 软键盘弹起
- 在 IOS 上，监听输入框的 focus 事件来获知软键盘弹起，监听输入框的 blur 事件获知软键盘收起。
- 在 Android 上，监听 webview 高度会变化，高度变小获知软键盘弹起，否则软键盘收起。
当输入框位于页面下部位置时，在 IOS 上，会将 webview 整体往上滚一段距离，使得该获取焦点的输入框自动处于可视区，而在 Android 则不会这样，它只会改变页面高度，而不会去滚动到当前焦点元素到可视区。
在 Android 键盘弹起后，将焦点元素滚动（scrollIntoView()）到可视区







